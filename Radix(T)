<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Radix Sort Theory</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #2563EB;
      animation: fadeIn 1s ease-out;
    }

    @keyframes fadeIn {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    .section-box {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      margin-bottom: 30px;
      opacity: 0;
      animation: fadeUp 1s forwards;
      animation-delay: 0.5s;
    }

    @keyframes fadeUp {
      0% {
        opacity: 0;
        transform: translateY(20px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .section-header {
      font-size: 1.75rem;
      font-weight: 600;
      color: #333;
      margin-bottom: 15px;
      border-bottom: 2px solid #e0e0e0;
      padding-bottom: 10px;
      transition: color 0.3s ease;
    }

    .section-header:hover {
      color: #2563EB;
    }

    .section-content {
      font-size: 1rem;
      color: #555;
      line-height: 1.6;
    }

    .list-disc {
      margin-left: 1.5rem;
    }

    .code-box {
      background-color: #f4f4f4;
      padding: 15px;
      border-radius: 5px;
      font-family: monospace;
      white-space: pre-wrap;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      margin-top: 15px;
      transition: background-color 0.3s ease;
    }

    .code-box:hover {
      background-color: #e0e0e0;
    }

    .highlight {
      background-color: #ffcc00;
    }

    .home-button {
      border: 2px solid #ffffff;
      padding: 10px 20px;
      border-radius: 8px;
      color: #ffffff;
      text-decoration: none;
      font-weight: 500;
      background-color: transparent;
      transition: background-color 0.3s ease, color 0.3s ease;
    }

    .home-button:hover {
      background-color: #f0f0f0;
      color: #2563EB;
    }

    .section-content li:hover {
      background-color: #f0f0f0;
      padding: 5px;
      border-radius: 5px;
      transition: background-color 0.3s ease;
    }

    header {
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      height: 100px;
      padding: 0 10px;
    }

    .logo-container {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    h1 {
      font-size: 2.5rem;
      font-weight: bold;
      color: white;
      margin: 0;
    }

    nav {
      position: absolute;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
    }

    @media (max-width: 640px) {
      .section-header {
        font-size: 1.25rem;
      }

      .section-content {
        font-size: 0.95rem;
      }

      h1 {
        font-size: 2rem;
      }

      .section-box {
        padding: 15px;
      }

      .home-button {
        padding: 8px 16px;
      }
    }

    @media (max-width: 1024px) {
      .section-header {
        font-size: 1.5rem;
      }
    }
  </style>
</head>
<body class="font-sans">

  <!-- Header Section -->
  <header class="bg-blue-600 text-white p-6">
    <div class="max-w-screen-xl mx-auto w-full flex justify-center items-center relative">
      <h1 class="text-4xl font-bold">AlgoVisual</h1>
      <nav class="flex space-x-6 text-lg absolute right-10 top-1/2 transform -translate-y-1/2">
        <a href="index.html" class="home-button">Home</a>
      </nav>
    </div>
  </header>

  <!-- Main Content -->
  <main class="py-12">
    <section class="max-w-screen-xl mx-auto px-6">

      <!-- What is Radix Sort -->
      <div class="section-box">
        <h2 class="section-header">What is Radix Sort?</h2>
        <p class="section-content">
          Radix Sort is a non-comparative sorting algorithm that sorts numbers (or strings) by processing individual digits. It processes each digit starting from the least significant digit to the most significant digit (LSD) or vice versa (MSD). Radix sort works efficiently on large datasets of integers or strings with a fixed length.
        </p>
      </div>

      <!-- How Radix Sort Works -->
      <div class="section-box">
        <h2 class="section-header">How does Radix Sort work?</h2>
        <ol class="section-content list-disc">
          <li><strong>Step 1:</strong> Start by sorting the array based on the least significant digit (LSD) or most significant digit (MSD).</li>
          <li><strong>Step 2:</strong> Group the elements based on the digit being processed.</li>
          <li><strong>Step 3:</strong> Repeat the process for each digit, moving to the next digit position (e.g., tens, hundreds, etc.), until all digits have been processed.</li>
          <li><strong>Step 4:</strong> After all digits have been processed, the array is sorted.</li>
        </ol>
      </div>

      <!-- Time Complexity -->
      <div class="section-box">
        <h2 class="section-header">Time Complexity of Radix Sort</h2>
        <p class="section-content">
          The time complexity of Radix Sort depends on the number of digits (d) in the largest number and the number of elements (n) to be sorted:
        </p>
        <ul class="section-content list-disc">
          <li><strong>Best case:</strong> O(n * d)</li>
          <li><strong>Average case:</strong> O(n * d)</li>
          <li><strong>Worst case:</strong> O(n * d)</li>
        </ul>
        <p>Where <em>n</em> is the number of elements in the array and <em>d</em> is the number of digits in the largest number. Since d is usually small relative to n, Radix Sort is efficient for large datasets with fixed-size integers or strings.</p>
      </div>

      <!-- Advantages -->
      <div class="section-box">
        <h2 class="section-header">Advantages of Radix Sort</h2>
        <ul class="section-content list-disc">
          <li>Efficient for sorting large datasets with a fixed length.</li>
          <li>It works in linear time, O(n * d), if d is small and fixed.</li>
          <li>It is a non-comparative sorting algorithm, so it avoids the overhead of comparison-based sorting algorithms like Merge Sort or Quick Sort.</li>
        </ul>
      </div>

      <!-- Disadvantages -->
      <div class="section-box">
        <h2 class="section-header">Disadvantages of Radix Sort</h2>
        <ul class="section-content list-disc">
          <li>It only works on integers or strings with fixed length.</li>
          <li>Radix Sort can be inefficient when the length of the numbers (d) grows large.</li>
          <li>It requires additional space for the auxiliary array used in the sorting process.</li>
        </ul>
      </div>

      <!-- Applications -->
      <div class="section-box">
        <h2 class="section-header">Applications of Radix Sort</h2>
        <ul class="section-content list-disc">
          <li>Efficiently sorting large numbers in databases or files.</li>
          <li>Sorting strings or sequences of characters with a fixed length.</li>
          <li>Used in applications like digital sorting, large-scale data processing, and in scenarios where comparisons between elements are costly.</li>
        </ul>
      </div>

      <!-- Example -->
      <div class="section-box">
        <h2 class="section-header">Radix Sort Example</h2>
        <div class="section-content">
          <p>Consider the array: <code>[170, 45, 75, 90, 802, 24, 2, 66]</code></p>
          <p>Step-by-step sorting by each digit (starting with the least significant digit):</p>
          <ul class="list-disc pl-6">
            <li>Pass 1 (Sort by ones digit): <code>[170, 90, 802, 24, 45, 75, 2, 66]</code></li>
            <li>Pass 2 (Sort by tens digit): <code>[170, 802, 2, 24, 45, 66, 75, 90]</code></li>
            <li>Pass 3 (Sort by hundreds digit): <code>[2, 24, 45, 66, 75, 90, 170, 802]</code></li>
          </ul>
          <p>Final sorted array: <code>[2, 24, 45, 66, 75, 90, 170, 802]</code></p>
        </div>
      </div>

    </section>
  </main>

  <!-- Footer Section -->
  <footer class="bg-blue-600 text-white p-6">
    <div class="max-w-screen-xl mx-auto text-center">
      <p>&copy; 2025 AlgoVisual | All rights reserved</p>
    </div>
  </footer>

</body>
</html>
